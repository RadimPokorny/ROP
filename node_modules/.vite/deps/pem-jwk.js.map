{
  "version": 3,
  "sources": ["../../pem-jwk/factor.js", "../../pem-jwk/index.js"],
  "sourcesContent": ["var asn = require('asn1.js')\nvar crypto = require('crypto')\nvar BN = asn.bignum\n\nvar zero = new BN(0)\nvar one = new BN(1)\nvar two = new BN(2)\n\nfunction rand(low, high) {\n  do {\n    var b = new BN(crypto.randomBytes(high.byteLength()))\n  } while(b.cmp(low) <= 0 || b.cmp(high) >= 0)\n  return b\n}\n\nfunction odd(n) {\n  if (n.cmp(zero) === 0) { return zero }\n  var r = n\n  while (r.isEven()) {\n    r = r.div(two)\n  }\n  return r\n}\n\nfunction rootOne(x, r, n) {\n  var i = x.toRed(BN.red(n)).redPow(r).fromRed()\n  var o = zero\n  while (i.cmp(one) !== 0) {\n    o = i\n    i = i.mul(i).mod(n)\n  }\n  if (o.cmp(n.sub(one)) === 0) {\n    return zero\n  }\n  return o\n}\n\nfunction factor(e, d, n) {\n  var k = e.mul(d).sub(one)\n  var r = odd(k)\n  do {\n    var y = rootOne(rand(two, n), r, n)\n  } while (y.cmp(zero) === 0)\n\n  var p = y.sub(one).gcd(n)\n  return {\n    p: p,\n    q: n.div(p)\n  }\n}\n\nmodule.exports = factor\n", "var asn = require('asn1.js')\nvar factor = require('./factor')\nvar one = new asn.bignum(1)\n\nfunction urlize(base64) {\n  return base64.replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=/g, '')\n}\n\nfunction hex2b64url(str) {\n  return urlize(Buffer.from(str, 'hex').toString('base64'))\n}\n\nfunction fromPEM(data) {\n  var text = data.toString().split(/(\\r\\n|\\r|\\n)+/g);\n  text = text.filter(function(line) {\n    return line.trim().length !== 0;\n  });\n  text = text.slice(1, -1).join('');\n  return Buffer.from(text.replace(/[^\\w\\d\\+\\/=]+/g, ''), 'base64');\n}\n\nvar RSAPublicKey = asn.define('RSAPublicKey', function () {\n  this.seq().obj(\n    this.key('n').int(),\n    this.key('e').int()\n  )\n})\n\nvar AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {\n  this.seq().obj(\n    this.key('algorithm').objid(),\n    this.key('parameters').optional().any()\n  )\n})\n\nvar PublicKeyInfo = asn.define('PublicKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('publicKey').bitstr()\n  )\n})\n\nvar Version = asn.define('Version', function () {\n  this.int({\n    0: 'two-prime',\n    1: 'multi'\n  })\n})\n\nvar OtherPrimeInfos = asn.define('OtherPrimeInfos', function () {\n  this.seq().obj(\n    this.key('ri').int(),\n    this.key('di').int(),\n    this.key('ti').int()\n  )\n})\n\nvar RSAPrivateKey = asn.define('RSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').use(Version),\n    this.key('n').int(),\n    this.key('e').int(),\n    this.key('d').int(),\n    this.key('p').int(),\n    this.key('q').int(),\n    this.key('dp').int(),\n    this.key('dq').int(),\n    this.key('qi').int(),\n    this.key('other').optional().use(OtherPrimeInfos)\n  )\n})\n\nvar PrivateKeyInfo = asn.define('PrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('version').use(Version),\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('privateKey').bitstr()\n  )\n})\n\nconst RSA_OID = '1.2.840.113549.1.1.1'\n\nfunction addExtras(obj, extras) {\n  extras = extras || {}\n  Object.keys(extras).forEach(\n    function (key) {\n      obj[key] = extras[key]\n    }\n  )\n  return obj\n}\n\nfunction pad(hex) {\n  return (hex.length % 2 === 1) ? '0' + hex : hex\n}\n\nfunction decodeRsaPublic(buffer, extras) {\n  var key = RSAPublicKey.decode(buffer, 'der')\n  var e = pad(key.e.toString(16))\n  var jwk = {\n    kty: 'RSA',\n    n: bn2base64url(key.n),\n    e: hex2b64url(e)\n  }\n  return addExtras(jwk, extras)\n}\n\nfunction decodeRsaPrivate(buffer, extras) {\n  var key = RSAPrivateKey.decode(buffer, 'der')\n  var e = pad(key.e.toString(16))\n  var jwk = {\n    kty: 'RSA',\n    n: bn2base64url(key.n),\n    e: hex2b64url(e),\n    d: bn2base64url(key.d),\n    p: bn2base64url(key.p),\n    q: bn2base64url(key.q),\n    dp: bn2base64url(key.dp),\n    dq: bn2base64url(key.dq),\n    qi: bn2base64url(key.qi)\n  }\n  return addExtras(jwk, extras)\n}\n\nfunction decodePublic(buffer, extras) {\n  var info = PublicKeyInfo.decode(buffer, 'der')\n  return decodeRsaPublic(info.publicKey.data, extras)\n}\n\nfunction decodePrivate(buffer, extras) {\n  var info = PrivateKeyInfo.decode(buffer, 'der')\n  return decodeRsaPrivate(info.privateKey.data, extras)\n}\n\nfunction getDecoder(header) {\n  var match = /^-----BEGIN (RSA )?(PUBLIC|PRIVATE) KEY-----$/.exec(header)\n  if (!match) { return null }\n  var isRSA = !!(match[1])\n  var isPrivate = (match[2] === 'PRIVATE')\n  if (isPrivate) {\n    return isRSA ? decodeRsaPrivate : decodePrivate\n  }\n  else {\n    return isRSA ? decodeRsaPublic : decodePublic\n  }\n}\n\nfunction pem2jwk(pem, extras) {\n  var text = pem.toString().split(/(\\r\\n|\\r|\\n)+/g)\n  text = text.filter(function(line) {\n    return line.trim().length !== 0\n  });\n  var decoder = getDecoder(text[0])\n\n  text = text.slice(1, -1).join('')\n  return decoder(Buffer.from(text.replace(/[^\\w\\d\\+\\/=]+/g, ''), 'base64'), extras)\n}\n\nfunction recomputePrimes(jwk) {\n  var pq = factor(jwk.e, jwk.d, jwk.n)\n  var p = pq.p\n  var q = pq.q\n  var dp = jwk.d.mod(p.sub(one))\n  var dq = jwk.d.mod(q.sub(one))\n  var qi = q.invm(p)\n  return {\n    n: jwk.n,\n    e: jwk.e,\n    d: jwk.d,\n    p: p,\n    q: q,\n    dp: dp,\n    dq: dq,\n    qi: qi\n  }\n}\n\nfunction parse(jwk) {\n  return {\n    n: string2bn(jwk.n),\n    e: string2bn(jwk.e),\n    d: jwk.d && string2bn(jwk.d),\n    p: jwk.p && string2bn(jwk.p),\n    q: jwk.q && string2bn(jwk.q),\n    dp: jwk.dp && string2bn(jwk.dp),\n    dq: jwk.dq && string2bn(jwk.dq),\n    qi: jwk.qi && string2bn(jwk.qi)\n  }\n}\n\nfunction jwk2pem(json) {\n  var jwk = parse(json)\n  var isPrivate = !!(jwk.d)\n  var t = isPrivate ? 'PRIVATE' : 'PUBLIC'\n  var header = '-----BEGIN RSA ' + t + ' KEY-----\\n'\n  var footer = '\\n-----END RSA ' + t + ' KEY-----\\n'\n  var data = null\n  if (isPrivate) {\n    if (!jwk.p) {\n      jwk = recomputePrimes(jwk)\n    }\n    jwk.version = 'two-prime'\n    data = RSAPrivateKey.encode(jwk, 'der')\n  }\n  else {\n    data = RSAPublicKey.encode(jwk, 'der')\n  }\n  var body = data.toString('base64').match(/.{1,64}/g).join('\\n')\n  return header + body + footer\n}\n\nfunction bn2base64url(bn) {\n  return hex2b64url(pad(bn.toString(16)))\n}\n\nfunction base64url2bn(str) {\n  return new asn.bignum(Buffer.from(str, 'base64'))\n}\n\nfunction string2bn(str) {\n  if (/^[0-9]+$/.test(str)) {\n    return new asn.bignum(str, 10)\n  }\n  return base64url2bn(str)\n}\n\nmodule.exports = {\n  pem2jwk: pem2jwk,\n  jwk2pem: jwk2pem,\n  BN: asn.bignum\n}\n"],
  "mappings": "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",
  "names": []
}
