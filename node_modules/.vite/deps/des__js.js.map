{
  "version": 3,
  "sources": ["../../des.js/lib/des/utils.js", "../../minimalistic-assert/index.js", "../../des.js/lib/des/cipher.js", "../../des.js/lib/des/des.js", "../../des.js/lib/des/cbc.js", "../../des.js/lib/des/ede.js", "../../des.js/lib/des.js"],
  "sourcesContent": ["'use strict';\r\n\r\nexports.readUInt32BE = function readUInt32BE(bytes, off) {\r\n  var res =  (bytes[0 + off] << 24) |\r\n             (bytes[1 + off] << 16) |\r\n             (bytes[2 + off] << 8) |\r\n             bytes[3 + off];\r\n  return res >>> 0;\r\n};\r\n\r\nexports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {\r\n  bytes[0 + off] = value >>> 24;\r\n  bytes[1 + off] = (value >>> 16) & 0xff;\r\n  bytes[2 + off] = (value >>> 8) & 0xff;\r\n  bytes[3 + off] = value & 0xff;\r\n};\r\n\r\nexports.ip = function ip(inL, inR, out, off) {\r\n  var outL = 0;\r\n  var outR = 0;\r\n\r\n  for (var i = 6; i >= 0; i -= 2) {\r\n    for (var j = 0; j <= 24; j += 8) {\r\n      outL <<= 1;\r\n      outL |= (inR >>> (j + i)) & 1;\r\n    }\r\n    for (var j = 0; j <= 24; j += 8) {\r\n      outL <<= 1;\r\n      outL |= (inL >>> (j + i)) & 1;\r\n    }\r\n  }\r\n\r\n  for (var i = 6; i >= 0; i -= 2) {\r\n    for (var j = 1; j <= 25; j += 8) {\r\n      outR <<= 1;\r\n      outR |= (inR >>> (j + i)) & 1;\r\n    }\r\n    for (var j = 1; j <= 25; j += 8) {\r\n      outR <<= 1;\r\n      outR |= (inL >>> (j + i)) & 1;\r\n    }\r\n  }\r\n\r\n  out[off + 0] = outL >>> 0;\r\n  out[off + 1] = outR >>> 0;\r\n};\r\n\r\nexports.rip = function rip(inL, inR, out, off) {\r\n  var outL = 0;\r\n  var outR = 0;\r\n\r\n  for (var i = 0; i < 4; i++) {\r\n    for (var j = 24; j >= 0; j -= 8) {\r\n      outL <<= 1;\r\n      outL |= (inR >>> (j + i)) & 1;\r\n      outL <<= 1;\r\n      outL |= (inL >>> (j + i)) & 1;\r\n    }\r\n  }\r\n  for (var i = 4; i < 8; i++) {\r\n    for (var j = 24; j >= 0; j -= 8) {\r\n      outR <<= 1;\r\n      outR |= (inR >>> (j + i)) & 1;\r\n      outR <<= 1;\r\n      outR |= (inL >>> (j + i)) & 1;\r\n    }\r\n  }\r\n\r\n  out[off + 0] = outL >>> 0;\r\n  out[off + 1] = outR >>> 0;\r\n};\r\n\r\nexports.pc1 = function pc1(inL, inR, out, off) {\r\n  var outL = 0;\r\n  var outR = 0;\r\n\r\n  // 7, 15, 23, 31, 39, 47, 55, 63\r\n  // 6, 14, 22, 30, 39, 47, 55, 63\r\n  // 5, 13, 21, 29, 39, 47, 55, 63\r\n  // 4, 12, 20, 28\r\n  for (var i = 7; i >= 5; i--) {\r\n    for (var j = 0; j <= 24; j += 8) {\r\n      outL <<= 1;\r\n      outL |= (inR >> (j + i)) & 1;\r\n    }\r\n    for (var j = 0; j <= 24; j += 8) {\r\n      outL <<= 1;\r\n      outL |= (inL >> (j + i)) & 1;\r\n    }\r\n  }\r\n  for (var j = 0; j <= 24; j += 8) {\r\n    outL <<= 1;\r\n    outL |= (inR >> (j + i)) & 1;\r\n  }\r\n\r\n  // 1, 9, 17, 25, 33, 41, 49, 57\r\n  // 2, 10, 18, 26, 34, 42, 50, 58\r\n  // 3, 11, 19, 27, 35, 43, 51, 59\r\n  // 36, 44, 52, 60\r\n  for (var i = 1; i <= 3; i++) {\r\n    for (var j = 0; j <= 24; j += 8) {\r\n      outR <<= 1;\r\n      outR |= (inR >> (j + i)) & 1;\r\n    }\r\n    for (var j = 0; j <= 24; j += 8) {\r\n      outR <<= 1;\r\n      outR |= (inL >> (j + i)) & 1;\r\n    }\r\n  }\r\n  for (var j = 0; j <= 24; j += 8) {\r\n    outR <<= 1;\r\n    outR |= (inL >> (j + i)) & 1;\r\n  }\r\n\r\n  out[off + 0] = outL >>> 0;\r\n  out[off + 1] = outR >>> 0;\r\n};\r\n\r\nexports.r28shl = function r28shl(num, shift) {\r\n  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));\r\n};\r\n\r\nvar pc2table = [\r\n  // inL => outL\r\n  14, 11, 17, 4, 27, 23, 25, 0,\r\n  13, 22, 7, 18, 5, 9, 16, 24,\r\n  2, 20, 12, 21, 1, 8, 15, 26,\r\n\r\n  // inR => outR\r\n  15, 4, 25, 19, 9, 1, 26, 16,\r\n  5, 11, 23, 8, 12, 7, 17, 0,\r\n  22, 3, 10, 14, 6, 20, 27, 24\r\n];\r\n\r\nexports.pc2 = function pc2(inL, inR, out, off) {\r\n  var outL = 0;\r\n  var outR = 0;\r\n\r\n  var len = pc2table.length >>> 1;\r\n  for (var i = 0; i < len; i++) {\r\n    outL <<= 1;\r\n    outL |= (inL >>> pc2table[i]) & 0x1;\r\n  }\r\n  for (var i = len; i < pc2table.length; i++) {\r\n    outR <<= 1;\r\n    outR |= (inR >>> pc2table[i]) & 0x1;\r\n  }\r\n\r\n  out[off + 0] = outL >>> 0;\r\n  out[off + 1] = outR >>> 0;\r\n};\r\n\r\nexports.expand = function expand(r, out, off) {\r\n  var outL = 0;\r\n  var outR = 0;\r\n\r\n  outL = ((r & 1) << 5) | (r >>> 27);\r\n  for (var i = 23; i >= 15; i -= 4) {\r\n    outL <<= 6;\r\n    outL |= (r >>> i) & 0x3f;\r\n  }\r\n  for (var i = 11; i >= 3; i -= 4) {\r\n    outR |= (r >>> i) & 0x3f;\r\n    outR <<= 6;\r\n  }\r\n  outR |= ((r & 0x1f) << 1) | (r >>> 31);\r\n\r\n  out[off + 0] = outL >>> 0;\r\n  out[off + 1] = outR >>> 0;\r\n};\r\n\r\nvar sTable = [\r\n  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,\r\n  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,\r\n  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,\r\n  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,\r\n\r\n  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,\r\n  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,\r\n  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,\r\n  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,\r\n\r\n  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,\r\n  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,\r\n  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,\r\n  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,\r\n\r\n  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,\r\n  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,\r\n  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,\r\n  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,\r\n\r\n  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,\r\n  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,\r\n  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,\r\n  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,\r\n\r\n  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,\r\n  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,\r\n  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,\r\n  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,\r\n\r\n  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,\r\n  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,\r\n  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,\r\n  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,\r\n\r\n  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,\r\n  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,\r\n  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,\r\n  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11\r\n];\r\n\r\nexports.substitute = function substitute(inL, inR) {\r\n  var out = 0;\r\n  for (var i = 0; i < 4; i++) {\r\n    var b = (inL >>> (18 - i * 6)) & 0x3f;\r\n    var sb = sTable[i * 0x40 + b];\r\n\r\n    out <<= 4;\r\n    out |= sb;\r\n  }\r\n  for (var i = 0; i < 4; i++) {\r\n    var b = (inR >>> (18 - i * 6)) & 0x3f;\r\n    var sb = sTable[4 * 0x40 + i * 0x40 + b];\r\n\r\n    out <<= 4;\r\n    out |= sb;\r\n  }\r\n  return out >>> 0;\r\n};\r\n\r\nvar permuteTable = [\r\n  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,\r\n  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7\r\n];\r\n\r\nexports.permute = function permute(num) {\r\n  var out = 0;\r\n  for (var i = 0; i < permuteTable.length; i++) {\r\n    out <<= 1;\r\n    out |= (num >>> permuteTable[i]) & 0x1;\r\n  }\r\n  return out >>> 0;\r\n};\r\n\r\nexports.padSplit = function padSplit(num, size, group) {\r\n  var str = num.toString(2);\r\n  while (str.length < size)\r\n    str = '0' + str;\r\n\r\n  var out = [];\r\n  for (var i = 0; i < size; i += group)\r\n    out.push(str.slice(i, i + group));\r\n  return out.join(' ');\r\n};\r\n", "module.exports = assert;\r\n\r\nfunction assert(val, msg) {\r\n  if (!val)\r\n    throw new Error(msg || 'Assertion failed');\r\n}\r\n\r\nassert.equal = function assertEqual(l, r, msg) {\r\n  if (l != r)\r\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\r\n};\r\n", "'use strict';\r\n\r\nvar assert = require('minimalistic-assert');\r\n\r\nfunction Cipher(options) {\r\n  this.options = options;\r\n\r\n  this.type = this.options.type;\r\n  this.blockSize = 8;\r\n  this._init();\r\n\r\n  this.buffer = new Array(this.blockSize);\r\n  this.bufferOff = 0;\r\n  this.padding = options.padding !== false\r\n}\r\nmodule.exports = Cipher;\r\n\r\nCipher.prototype._init = function _init() {\r\n  // Might be overrided\r\n};\r\n\r\nCipher.prototype.update = function update(data) {\r\n  if (data.length === 0)\r\n    return [];\r\n\r\n  if (this.type === 'decrypt')\r\n    return this._updateDecrypt(data);\r\n  else\r\n    return this._updateEncrypt(data);\r\n};\r\n\r\nCipher.prototype._buffer = function _buffer(data, off) {\r\n  // Append data to buffer\r\n  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);\r\n  for (var i = 0; i < min; i++)\r\n    this.buffer[this.bufferOff + i] = data[off + i];\r\n  this.bufferOff += min;\r\n\r\n  // Shift next\r\n  return min;\r\n};\r\n\r\nCipher.prototype._flushBuffer = function _flushBuffer(out, off) {\r\n  this._update(this.buffer, 0, out, off);\r\n  this.bufferOff = 0;\r\n  return this.blockSize;\r\n};\r\n\r\nCipher.prototype._updateEncrypt = function _updateEncrypt(data) {\r\n  var inputOff = 0;\r\n  var outputOff = 0;\r\n\r\n  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;\r\n  var out = new Array(count * this.blockSize);\r\n\r\n  if (this.bufferOff !== 0) {\r\n    inputOff += this._buffer(data, inputOff);\r\n\r\n    if (this.bufferOff === this.buffer.length)\r\n      outputOff += this._flushBuffer(out, outputOff);\r\n  }\r\n\r\n  // Write blocks\r\n  var max = data.length - ((data.length - inputOff) % this.blockSize);\r\n  for (; inputOff < max; inputOff += this.blockSize) {\r\n    this._update(data, inputOff, out, outputOff);\r\n    outputOff += this.blockSize;\r\n  }\r\n\r\n  // Queue rest\r\n  for (; inputOff < data.length; inputOff++, this.bufferOff++)\r\n    this.buffer[this.bufferOff] = data[inputOff];\r\n\r\n  return out;\r\n};\r\n\r\nCipher.prototype._updateDecrypt = function _updateDecrypt(data) {\r\n  var inputOff = 0;\r\n  var outputOff = 0;\r\n\r\n  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;\r\n  var out = new Array(count * this.blockSize);\r\n\r\n  // TODO(indutny): optimize it, this is far from optimal\r\n  for (; count > 0; count--) {\r\n    inputOff += this._buffer(data, inputOff);\r\n    outputOff += this._flushBuffer(out, outputOff);\r\n  }\r\n\r\n  // Buffer rest of the input\r\n  inputOff += this._buffer(data, inputOff);\r\n\r\n  return out;\r\n};\r\n\r\nCipher.prototype.final = function final(buffer) {\r\n  var first;\r\n  if (buffer)\r\n    first = this.update(buffer);\r\n\r\n  var last;\r\n  if (this.type === 'encrypt')\r\n    last = this._finalEncrypt();\r\n  else\r\n    last = this._finalDecrypt();\r\n\r\n  if (first)\r\n    return first.concat(last);\r\n  else\r\n    return last;\r\n};\r\n\r\nCipher.prototype._pad = function _pad(buffer, off) {\r\n  if (off === 0)\r\n    return false;\r\n\r\n  while (off < buffer.length)\r\n    buffer[off++] = 0;\r\n\r\n  return true;\r\n};\r\n\r\nCipher.prototype._finalEncrypt = function _finalEncrypt() {\r\n  if (!this._pad(this.buffer, this.bufferOff))\r\n    return [];\r\n\r\n  var out = new Array(this.blockSize);\r\n  this._update(this.buffer, 0, out, 0);\r\n  return out;\r\n};\r\n\r\nCipher.prototype._unpad = function _unpad(buffer) {\r\n  return buffer;\r\n};\r\n\r\nCipher.prototype._finalDecrypt = function _finalDecrypt() {\r\n  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');\r\n  var out = new Array(this.blockSize);\r\n  this._flushBuffer(out, 0);\r\n\r\n  return this._unpad(out);\r\n};\r\n", "'use strict';\r\n\r\nvar assert = require('minimalistic-assert');\r\nvar inherits = require('inherits');\r\n\r\nvar utils = require('./utils');\r\nvar Cipher = require('./cipher');\r\n\r\nfunction DESState() {\r\n  this.tmp = new Array(2);\r\n  this.keys = null;\r\n}\r\n\r\nfunction DES(options) {\r\n  Cipher.call(this, options);\r\n\r\n  var state = new DESState();\r\n  this._desState = state;\r\n\r\n  this.deriveKeys(state, options.key);\r\n}\r\ninherits(DES, Cipher);\r\nmodule.exports = DES;\r\n\r\nDES.create = function create(options) {\r\n  return new DES(options);\r\n};\r\n\r\nvar shiftTable = [\r\n  1, 1, 2, 2, 2, 2, 2, 2,\r\n  1, 2, 2, 2, 2, 2, 2, 1\r\n];\r\n\r\nDES.prototype.deriveKeys = function deriveKeys(state, key) {\r\n  state.keys = new Array(16 * 2);\r\n\r\n  assert.equal(key.length, this.blockSize, 'Invalid key length');\r\n\r\n  var kL = utils.readUInt32BE(key, 0);\r\n  var kR = utils.readUInt32BE(key, 4);\r\n\r\n  utils.pc1(kL, kR, state.tmp, 0);\r\n  kL = state.tmp[0];\r\n  kR = state.tmp[1];\r\n  for (var i = 0; i < state.keys.length; i += 2) {\r\n    var shift = shiftTable[i >>> 1];\r\n    kL = utils.r28shl(kL, shift);\r\n    kR = utils.r28shl(kR, shift);\r\n    utils.pc2(kL, kR, state.keys, i);\r\n  }\r\n};\r\n\r\nDES.prototype._update = function _update(inp, inOff, out, outOff) {\r\n  var state = this._desState;\r\n\r\n  var l = utils.readUInt32BE(inp, inOff);\r\n  var r = utils.readUInt32BE(inp, inOff + 4);\r\n\r\n  // Initial Permutation\r\n  utils.ip(l, r, state.tmp, 0);\r\n  l = state.tmp[0];\r\n  r = state.tmp[1];\r\n\r\n  if (this.type === 'encrypt')\r\n    this._encrypt(state, l, r, state.tmp, 0);\r\n  else\r\n    this._decrypt(state, l, r, state.tmp, 0);\r\n\r\n  l = state.tmp[0];\r\n  r = state.tmp[1];\r\n\r\n  utils.writeUInt32BE(out, l, outOff);\r\n  utils.writeUInt32BE(out, r, outOff + 4);\r\n};\r\n\r\nDES.prototype._pad = function _pad(buffer, off) {\r\n  if (this.padding === false) {\r\n    return false;\r\n  }\r\n\r\n  var value = buffer.length - off;\r\n  for (var i = off; i < buffer.length; i++)\r\n    buffer[i] = value;\r\n\r\n  return true;\r\n};\r\n\r\nDES.prototype._unpad = function _unpad(buffer) {\r\n  if (this.padding === false) {\r\n    return buffer;\r\n  }\r\n\r\n  var pad = buffer[buffer.length - 1];\r\n  for (var i = buffer.length - pad; i < buffer.length; i++)\r\n    assert.equal(buffer[i], pad);\r\n\r\n  return buffer.slice(0, buffer.length - pad);\r\n};\r\n\r\nDES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {\r\n  var l = lStart;\r\n  var r = rStart;\r\n\r\n  // Apply f() x16 times\r\n  for (var i = 0; i < state.keys.length; i += 2) {\r\n    var keyL = state.keys[i];\r\n    var keyR = state.keys[i + 1];\r\n\r\n    // f(r, k)\r\n    utils.expand(r, state.tmp, 0);\r\n\r\n    keyL ^= state.tmp[0];\r\n    keyR ^= state.tmp[1];\r\n    var s = utils.substitute(keyL, keyR);\r\n    var f = utils.permute(s);\r\n\r\n    var t = r;\r\n    r = (l ^ f) >>> 0;\r\n    l = t;\r\n  }\r\n\r\n  // Reverse Initial Permutation\r\n  utils.rip(r, l, out, off);\r\n};\r\n\r\nDES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {\r\n  var l = rStart;\r\n  var r = lStart;\r\n\r\n  // Apply f() x16 times\r\n  for (var i = state.keys.length - 2; i >= 0; i -= 2) {\r\n    var keyL = state.keys[i];\r\n    var keyR = state.keys[i + 1];\r\n\r\n    // f(r, k)\r\n    utils.expand(l, state.tmp, 0);\r\n\r\n    keyL ^= state.tmp[0];\r\n    keyR ^= state.tmp[1];\r\n    var s = utils.substitute(keyL, keyR);\r\n    var f = utils.permute(s);\r\n\r\n    var t = l;\r\n    l = (r ^ f) >>> 0;\r\n    r = t;\r\n  }\r\n\r\n  // Reverse Initial Permutation\r\n  utils.rip(l, r, out, off);\r\n};\r\n", "'use strict';\r\n\r\nvar assert = require('minimalistic-assert');\r\nvar inherits = require('inherits');\r\n\r\nvar proto = {};\r\n\r\nfunction CBCState(iv) {\r\n  assert.equal(iv.length, 8, 'Invalid IV length');\r\n\r\n  this.iv = new Array(8);\r\n  for (var i = 0; i < this.iv.length; i++)\r\n    this.iv[i] = iv[i];\r\n}\r\n\r\nfunction instantiate(Base) {\r\n  function CBC(options) {\r\n    Base.call(this, options);\r\n    this._cbcInit();\r\n  }\r\n  inherits(CBC, Base);\r\n\r\n  var keys = Object.keys(proto);\r\n  for (var i = 0; i < keys.length; i++) {\r\n    var key = keys[i];\r\n    CBC.prototype[key] = proto[key];\r\n  }\r\n\r\n  CBC.create = function create(options) {\r\n    return new CBC(options);\r\n  };\r\n\r\n  return CBC;\r\n}\r\n\r\nexports.instantiate = instantiate;\r\n\r\nproto._cbcInit = function _cbcInit() {\r\n  var state = new CBCState(this.options.iv);\r\n  this._cbcState = state;\r\n};\r\n\r\nproto._update = function _update(inp, inOff, out, outOff) {\r\n  var state = this._cbcState;\r\n  var superProto = this.constructor.super_.prototype;\r\n\r\n  var iv = state.iv;\r\n  if (this.type === 'encrypt') {\r\n    for (var i = 0; i < this.blockSize; i++)\r\n      iv[i] ^= inp[inOff + i];\r\n\r\n    superProto._update.call(this, iv, 0, out, outOff);\r\n\r\n    for (var i = 0; i < this.blockSize; i++)\r\n      iv[i] = out[outOff + i];\r\n  } else {\r\n    superProto._update.call(this, inp, inOff, out, outOff);\r\n\r\n    for (var i = 0; i < this.blockSize; i++)\r\n      out[outOff + i] ^= iv[i];\r\n\r\n    for (var i = 0; i < this.blockSize; i++)\r\n      iv[i] = inp[inOff + i];\r\n  }\r\n};\r\n", "'use strict';\r\n\r\nvar assert = require('minimalistic-assert');\r\nvar inherits = require('inherits');\r\n\r\nvar Cipher = require('./cipher');\r\nvar DES = require('./des');\r\n\r\nfunction EDEState(type, key) {\r\n  assert.equal(key.length, 24, 'Invalid key length');\r\n\r\n  var k1 = key.slice(0, 8);\r\n  var k2 = key.slice(8, 16);\r\n  var k3 = key.slice(16, 24);\r\n\r\n  if (type === 'encrypt') {\r\n    this.ciphers = [\r\n      DES.create({ type: 'encrypt', key: k1 }),\r\n      DES.create({ type: 'decrypt', key: k2 }),\r\n      DES.create({ type: 'encrypt', key: k3 })\r\n    ];\r\n  } else {\r\n    this.ciphers = [\r\n      DES.create({ type: 'decrypt', key: k3 }),\r\n      DES.create({ type: 'encrypt', key: k2 }),\r\n      DES.create({ type: 'decrypt', key: k1 })\r\n    ];\r\n  }\r\n}\r\n\r\nfunction EDE(options) {\r\n  Cipher.call(this, options);\r\n\r\n  var state = new EDEState(this.type, this.options.key);\r\n  this._edeState = state;\r\n}\r\ninherits(EDE, Cipher);\r\n\r\nmodule.exports = EDE;\r\n\r\nEDE.create = function create(options) {\r\n  return new EDE(options);\r\n};\r\n\r\nEDE.prototype._update = function _update(inp, inOff, out, outOff) {\r\n  var state = this._edeState;\r\n\r\n  state.ciphers[0]._update(inp, inOff, out, outOff);\r\n  state.ciphers[1]._update(out, outOff, out, outOff);\r\n  state.ciphers[2]._update(out, outOff, out, outOff);\r\n};\r\n\r\nEDE.prototype._pad = DES.prototype._pad;\r\nEDE.prototype._unpad = DES.prototype._unpad;\r\n", "'use strict';\r\n\r\nexports.utils = require('./des/utils');\r\nexports.Cipher = require('./des/cipher');\r\nexports.DES = require('./des/des');\r\nexports.CBC = require('./des/cbc');\r\nexports.EDE = require('./des/ede');\r\n"],
  "mappings": "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AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAElD;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MACjD;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MACpD;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACjD;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAEpD;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MACnD;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MACnD;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MACpD;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAEjD;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MACpD;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAClD;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACnD;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAElD;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACnD;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MACnD;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAClD;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAElD;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MACnD;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAClD;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MACpD;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAEjD;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MACnD;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAA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",
  "names": ["require_des"]
}
