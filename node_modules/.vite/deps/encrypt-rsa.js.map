{
  "version": 3,
  "sources": ["../../encrypt-rsa/build/utils/helpers.js", "../../encrypt-rsa/build/index.js"],
  "sourcesContent": ["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.encode = exports.decode = void 0;\r\nvar decode = function (str) { return Buffer.from(str, 'base64').toString('utf-8'); };\r\nexports.decode = decode;\r\nvar encode = function (str) { return Buffer.from(str, 'utf-8').toString('base64'); };\r\nexports.encode = encode;\r\n", "\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar crypto = __importStar(require(\"crypto\"));\r\nvar helpers_1 = require(\"./utils/helpers\");\r\nvar NodeRSA = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param publicKey\r\n     * @param privateKey\r\n     */\r\n    function NodeRSA(publicKey, privateKey, modulusLength) {\r\n        this.publicKey = publicKey;\r\n        this.privateKey = privateKey;\r\n        this.modulusLength = modulusLength || 2048;\r\n        this.keyBase64 = '';\r\n    }\r\n    /**\r\n     *\r\n     * @param {Object} args\r\n     * @param {String} args.publicKey\r\n     * @param {String} args.text the text that you need to encrypt\r\n     *\r\n     * @returns {String}\r\n     */\r\n    NodeRSA.prototype.encryptStringWithRsaPublicKey = function (args) {\r\n        var text = args.text, _a = args.publicKey, publicKey = _a === void 0 ? this.publicKey : _a;\r\n        var publicKeyDecoded = (0, helpers_1.decode)(this.convertKetToBase64(publicKey));\r\n        var buffer = Buffer.from(text);\r\n        var encrypted = crypto === null || crypto === void 0 ? void 0 : crypto.publicEncrypt(publicKeyDecoded, buffer);\r\n        return encrypted.toString('base64');\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} args\r\n     * @param {String} args.privateKey\r\n     * @param {String} args.text the text that you need to decrypt\r\n     *\r\n     * @returns {String}\r\n     */\r\n    NodeRSA.prototype.decryptStringWithRsaPrivateKey = function (args) {\r\n        var text = args.text, _a = args.privateKey, privateKey = _a === void 0 ? this.privateKey : _a;\r\n        var privateKeyDecoded = (0, helpers_1.decode)(this.convertKetToBase64(privateKey));\r\n        var buffer = Buffer.from(text, 'base64');\r\n        var decrypted = crypto === null || crypto === void 0 ? void 0 : crypto.privateDecrypt(privateKeyDecoded, buffer);\r\n        return decrypted.toString('utf8');\r\n    };\r\n    NodeRSA.prototype.createPrivateAndPublicKeys = function (modulusLength) {\r\n        if (modulusLength === void 0) { modulusLength = this.modulusLength; }\r\n        if (typeof crypto.generateKeyPairSync === 'function') {\r\n            var _a = crypto.generateKeyPairSync('rsa', {\r\n                modulusLength: modulusLength,\r\n                publicKeyEncoding: {\r\n                    type: 'spki',\r\n                    format: 'pem',\r\n                },\r\n                privateKeyEncoding: {\r\n                    type: 'pkcs8',\r\n                    format: 'pem',\r\n                },\r\n            }), privateKey = _a.privateKey, publicKey = _a.publicKey;\r\n            return { privateKey: privateKey, publicKey: publicKey };\r\n        }\r\n        return { privateKey: '', publicKey: '' };\r\n    };\r\n    NodeRSA.prototype.convertKetToBase64 = function (key) {\r\n        return (0, helpers_1.encode)(key.replace(/^ +/gm, '') || this.keyBase64);\r\n    };\r\n    return NodeRSA;\r\n}());\r\nexports.default = NodeRSA;\r\n"],
  "mappings": "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",
  "names": ["NodeRSA"]
}
